import{d as i}from"./C6fDkkBA.js";const l="http://api.rsapba.xyz";class w{async register(e,s){console.log("here");let t=await this.call("/user/register","POST",{hash:e,password:s});if(t.status===201)return{jwt:(await t.json()).jwt,redirect:void 0};throw new Error("Error response!"+t.status)}async getUserQuestions(e){let s=await this.call(`/user/${e}`,"GET");if(s.status!==200)throw Error("failed get user question");return(await s.json()).result.questions}async getQuestions(){let e=await this.call("/question","GET");if(e.status!==200)throw Error("failed get questions");let s=await e.json(),t=[];return s.result.questions.forEach(r=>{r.key!==1&&t.push({key:r.key,content:r.content})}),t}async patchUser(e,s,t){const r=[];for(const n of s)r.push({key:n.key,answer:await i(n.content)});if((await this.call(`/user/${e}`,"PATCH",{add:r,delete:t})).status!==200)throw Error("cannot update profile");return!0}async login(e,s){let t=await this.call(`/login/${e}`,"POST",{password:s});if(t.status===401)throw new Error(await t.text());if(t.status!==201)throw new Error("Something went wrong!");let r=await t.json();return{jwt:r.jwt??void 0,redirect:r.redirect}}async getChallenge(e){let s=await this.call(`/login/${e}/challenge`,"GET");if(s.status!==200)throw Error("cannot get challenge!");let t=await s.json();const r=[];return t.result.questions.forEach(a=>{r.push({key:a.key,content:a.content})}),r}async answerChallenge(e,s,t){const r=[];for(const o of s)r.push({key:o.key,answer:await i(o.content)});let a=await this.call(`/login/${e}/answer`,"POST",{answers:r,key:t.key,signature:t.signature});if(a.status===400)throw new Error(await a.text());if(a.status!==201)throw new Error("Something went wrong!");return{jwt:(await a.json()).jwt,redirect:void 0}}async deleteUser(e){if((await this.call(`/user/${e}`,"DELETE")).status!==204)throw new Error("Cannot delete!")}async call(e,s,t=null){return await fetch(l+e,{method:s,headers:{"Content-Type":"application/json"},body:t?JSON.stringify(t):void 0})}}const h=()=>new w,d=!0;export{d as C,h as g};
